-- BEGINWAIT
-- ENDWAIT
-- BEGINWAIT
-- ENDWAIT
-- BEGININFO
-- TYPE|4|13
Type₁
-- ACK
-- TYPE|4|16
Prop
-- ACK
-- IDENTIFIER|4|16
true
-- ACK
-- ENDINFO
-- BEGINWAIT
-- ENDWAIT
-- BEGININFO
-- TYPE|4|13
Type₁
-- ACK
-- TYPE|4|16
Prop
-- ACK
-- IDENTIFIER|4|16
true
-- ACK
-- ENDINFO
-- BEGINFINDG
-- ENDFINDG
-- BEGINWAIT
-- ENDWAIT
-- BEGINSHOW
import logic data.nat.basic
open nat eq.ops

definition a := true

theorem tst (a b c : nat) : a + b + c = a + c + b :=
calc a + b + c = a + (b + c) : _
         ...   = a + (c + b) : {!add.comm}
         ...   = a + c + b   : (!add.assoc)⁻¹
-- ENDSHOW
